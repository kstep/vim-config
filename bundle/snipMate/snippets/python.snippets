snippet #!
	#!/usr/bin/python

snippet imp
	import ${1:module}
snippet impf
	from ${1:module} import ${2:*}
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet wh
	while ${1:condition}:
	    ${2:pass}
snippet for
	for ${1:needle} in ${2:haystack}:
	    ${3:pass}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
	    def __init__(self):
	        ${3:pass}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self, ' : ''`}${3:arg}):
	    ${4:pass}
snippet deff
	def ${1:fname}(${2:arg}):
	    ${3:pass}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
	    ${3:pass}
snippet def_
	def __${1:mname}__(self, ${2:other}):
	    ${3:pass}
# New Property
snippet prop
	def ${1:foo}():
	    doc = "${2:The $1 property.}"
	    def fget(self):
	        ${3:return self._$1}
	    def fset(self, value):
	        ${4:self._$1 = value}
# Lambda
snippet ld
	lambda ${1:vars}: ${2:action}
snippet .
	self.
snippet try
	try:
	    ${1:pass}
	except ${2:Exception}, ${3:e}:
	    ${4:raise $3}
snippet trye
	try:
	    ${1:pass}
	except ${2:Exception}, ${3:e}:
	    ${4:raise $3}
	else:
	    ${5:pass}
snippet tryf
	try:
	    ${1:pass}
	except ${2:Exception}, ${3:e}:
	    ${4:raise $3}
	finally:
	    ${5:pass}
snippet tryfe
	try:
	    ${1:pass}
	except ${2:Exception}, ${3:e}:
	    ${4:raise $3}
	else:
	    ${5:pass}
	finally:
	    ${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
	    ${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
