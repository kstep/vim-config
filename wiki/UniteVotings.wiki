
= Устройство голосований на Unite-е =

Есть специальный модуль '''unite.api.ratings''' в котором содержаться классы '''Ratings''', '''Ratings.Rate''' и '''ObjectRates'''.

'''Ratings''' — это основной класс, который знает обо всех рейтингуемых классах, т.к. они в нём регистрируются через наш протокол ''__registered_in__'',

'''Ratings.Rate''' — специальный класс-дескриптор, привязывающий к свойству рейтингуемого класса инстанс класса '''ObjectRates''',

'''ObjectRates''' — класс, предоставляющий интерфейс к рейтингу классов (свойства и методы для выставления и изменения рейтинга и т.п.).

Таким образом для того, чтобы сделать класс рейтингуемым нужно:

    1. {{{
#!code python
from unite.api.ratings import Ratings
    }}}
    2. {{{
#!code python
class SomeClass(ActiveModel):
    __registered_in__ = [ Ratings ]
    rating = Ratings.Rate()
    }}}
    3. PROFIT!

При этом создатся табличка, в которую записываются все связки вида ''кто голосовал''→''за что голосовал''+''как голосовал''.

Текущая логика работы:

    1. один аккаунт === один голос, разные профили одного аккаунта не могут голосовать за один и тот же объект, если хотя бы один из них уже проголосовал,
    2. человек не может голосовать за объект, автором которого является,
    3. голосовать можно только за тот объект, на который у человека есть права на комментирование,
    4. оценку можно менять, при этом старая оценка пользователя удаляется и заменяется новой оценкой с соответствующими пересчётами.

= Выводы =

Я считаю, что текущая реализация достаточно красива, легка в использовании и предоставляет достаточный уровень абстракции, что делает нецелесообразные её полное переписывание. Для реализации новой логики работы рейтингов необходимо изменить логику работы одного единственного класса.

Кроме того в связи с тем, что у нас в системе появился новый модуль '''Ratings''' необходимо переименовать старый модуль рейтингов чтобы избежать проблем одинковыми (и двусмысленными) именами свойств/классов/полей/констант и т.п. Я предлагаю вариант '''Vote''' и '''Voting(s)''', т.е. следующие переименования:

    1. unite.api.ratings → unite.api.votings,
    2. Rating(s) → Voting(s), rating(s) → voting(s),
    3. Rate(s) → vote(s).

Применить её следует для всех полей и классов, связанных со старыми рейтингами, причём это должен быть первый шаг в реализации новых рейтингов, чтобы избежать дальнейших проблем в работе.

